# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Agendaless Consulting and Contributors
# This file is distributed under the same license as the Supervisor package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Supervisor 4.3.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-02 04:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../introduction.rst:2
msgid "Introduction"
msgstr "介绍"

#: ../../introduction.rst:5
msgid "Overview"
msgstr "概述"

#: ../../introduction.rst:7
msgid ""
"Supervisor is a client/server system that allows its users to control a "
"number of processes on UNIX-like operating systems.  It was inspired by "
"the following:"
msgstr ""
"Supervisor 是客户端/服务器系统，允许用户在类 UNIX 操作系统上控制多个进程。"
"它的灵感来源于以下几点："

#: ../../introduction.rst:11
msgid "Convenience"
msgstr "便利"

#: ../../introduction.rst:13
msgid ""
"It is often inconvenient to need to write ``rc.d`` scripts for every "
"single process instance.  ``rc.d`` scripts are a great lowest-common-"
"denominator form of process initialization/autostart/management, but they"
" can be painful to write and maintain.  Additionally, ``rc.d`` scripts "
"cannot automatically restart a crashed process and many programs do not "
"restart themselves properly on a crash.  Supervisord starts processes as "
"its subprocesses, and can be configured to automatically restart them on "
"a crash.  It can also automatically be configured to start processes on "
"its own invocation."
msgstr ""
"通常需要写 ``rc.d`` 脚本用于每个单个流程实例是不方便的。"
"``rc.d`` 脚本是进程初始化/自动启动/管理的一种极好的最低公分母形式，但它们的编写和维护可能非常痛苦。"
"此外，``rc.d`` 脚本不能自动重新启动崩溃的进程，许多程序在崩溃时不能正确地重新启动自己。"
"supervisor 将进程作为它的子进程启动，可以配置为在崩溃时自动重启它们。"
"它还可以被自动配置为在自己调用时启动进程。"

#: ../../introduction.rst:24
msgid "Accuracy"
msgstr "精度"

#: ../../introduction.rst:26
msgid ""
"It's often difficult to get accurate up/down status on processes on UNIX."
"  Pidfiles often lie.  Supervisord starts processes as subprocesses, so "
"it always knows the true up/down status of its children and can be "
"queried conveniently for this data."
msgstr ""

#: ../../introduction.rst:31
msgid "Delegation"
msgstr ""

#: ../../introduction.rst:33
msgid ""
"Users who need to control process state often need only to do that. They "
"don't want or need full-blown shell access to the machine on which the "
"processes are running.  Processes which listen on \"low\" TCP ports often"
" need to be started and restarted as the root user (a UNIX misfeature).  "
"It's usually the case that it's perfectly fine to allow \"normal\" people"
" to stop or restart such a process, but providing them with shell access "
"is often impractical, and providing them with root access or sudo access "
"is often impossible.  It's also (rightly) difficult to explain to them "
"why this problem exists.  If supervisord is started as root, it is "
"possible to allow \"normal\" users to control such processes without "
"needing to explain the intricacies of the problem to them.  Supervisorctl"
" allows a very limited form of access to the machine, essentially "
"allowing users to see process status and control supervisord-controlled "
"subprocesses by emitting \"stop\", \"start\", and \"restart\" commands "
"from a simple shell or web UI."
msgstr ""

#: ../../introduction.rst:50
msgid "Process Groups"
msgstr ""

#: ../../introduction.rst:52
msgid ""
"Processes often need to be started and stopped in groups, sometimes even "
"in a \"priority order\".  It's often difficult to explain to people how "
"to do this.  Supervisor allows you to assign priorities to processes, and"
" allows user to emit commands via the supervisorctl client like \"start "
"all\", and \"restart all\", which starts them in the preassigned priority"
" order.  Additionally, processes can be grouped into \"process groups\" "
"and a set of logically related processes can be stopped and started as a "
"unit."
msgstr ""

#: ../../introduction.rst:62
msgid "Features"
msgstr ""

#: ../../introduction.rst:64
msgid "Simple"
msgstr ""

#: ../../introduction.rst:66
msgid ""
"Supervisor is configured through a simple INI-style config file that’s "
"easy to learn. It provides many per-process options that make your life "
"easier like restarting failed processes and automatic log rotation."
msgstr ""

#: ../../introduction.rst:71
msgid "Centralized"
msgstr ""

#: ../../introduction.rst:73
msgid ""
"Supervisor provides you with one place to start, stop, and monitor your "
"processes. Processes can be controlled individually or in groups. You can"
" configure Supervisor to provide a local or remote command line and web "
"interface."
msgstr ""

#: ../../introduction.rst:78
msgid "Efficient"
msgstr ""

#: ../../introduction.rst:80
msgid ""
"Supervisor starts its subprocesses via fork/exec and subprocesses don’t "
"daemonize. The operating system signals Supervisor immediately when a "
"process terminates, unlike some solutions that rely on troublesome PID "
"files and periodic polling to restart failed processes."
msgstr ""

#: ../../introduction.rst:86
msgid "Extensible"
msgstr ""

#: ../../introduction.rst:88
msgid ""
"Supervisor has a simple event notification protocol that programs written"
" in any language can use to monitor it, and an XML-RPC interface for "
"control. It is also built with extension points that can be leveraged by "
"Python developers."
msgstr ""

#: ../../introduction.rst:93
msgid "Compatible"
msgstr ""

#: ../../introduction.rst:95
msgid ""
"Supervisor works on just about everything except for Windows. It is "
"tested and supported on Linux, Mac OS X, Solaris, and FreeBSD. It is "
"written entirely in Python, so installation does not require a C "
"compiler."
msgstr ""

#: ../../introduction.rst:100
msgid "Proven"
msgstr ""

#: ../../introduction.rst:102
msgid ""
"While Supervisor is very actively developed today, it is not new "
"software. Supervisor has been around for years and is already in use on "
"many servers."
msgstr ""

#: ../../introduction.rst:107
msgid "Supervisor Components"
msgstr ""

#: ../../introduction.rst:109
msgid ":program:`supervisord`"
msgstr ""

#: ../../introduction.rst:111
msgid ""
"The server piece of supervisor is named :program:`supervisord`.  It is "
"responsible for starting child programs at its own invocation, responding"
" to commands from clients, restarting crashed or exited subprocesseses, "
"logging its subprocess ``stdout`` and ``stderr`` output, and generating "
"and handling \"events\" corresponding to points in subprocess lifetimes."
msgstr ""

#: ../../introduction.rst:118
msgid ""
"The server process uses a configuration file.  This is typically located "
"in :file:`/etc/supervisord.conf`.  This configuration file is a "
"\"Windows-INI\" style config file.  It is important to keep this file "
"secure via proper filesystem permissions because it may contain "
"unencrypted usernames and passwords."
msgstr ""

#: ../../introduction.rst:124
msgid ":program:`supervisorctl`"
msgstr ""

#: ../../introduction.rst:126
msgid ""
"The command-line client piece of the supervisor is named "
":program:`supervisorctl`.  It provides a shell-like interface to the "
"features provided by :program:`supervisord`.  From "
":program:`supervisorctl`, a user can connect to different "
":program:`supervisord` processes (one at a time), get status on the "
"subprocesses controlled by, stop and start subprocesses of, and get lists"
" of running processes of a :program:`supervisord`."
msgstr ""

#: ../../introduction.rst:134
msgid ""
"The command-line client talks to the server across a UNIX domain socket "
"or an internet (TCP) socket.  The server can assert that the user of a "
"client should present authentication credentials before it allows him to "
"perform commands.  The client process typically uses the same "
"configuration file as the server but any configuration file with a "
"``[supervisorctl]`` section in it will work."
msgstr ""

#: ../../introduction.rst:141
msgid "Web Server"
msgstr ""

#: ../../introduction.rst:143
msgid ""
"A (sparse) web user interface with functionality comparable to "
":program:`supervisorctl` may be accessed via a browser if you start "
":program:`supervisord` against an internet socket.  Visit the server URL "
"(e.g. ``http://localhost:9001/``) to view and control process status "
"through the web interface after activating the configuration file's "
"``[inet_http_server]`` section."
msgstr ""

#: ../../introduction.rst:150
msgid "XML-RPC Interface"
msgstr ""

#: ../../introduction.rst:152
msgid ""
"The same HTTP server which serves the web UI serves up an XML-RPC "
"interface that can be used to interrogate and control supervisor and the "
"programs it runs.  See :ref:`xml_rpc`."
msgstr ""

#: ../../introduction.rst:157
msgid "Platform Requirements"
msgstr ""

#: ../../introduction.rst:159
msgid ""
"Supervisor has been tested and is known to run on Linux (Ubuntu 18.04), "
"Mac OS X (10.4/10.5/10.6), and Solaris (10 for Intel) and FreeBSD 6.1. It"
" will likely work fine on most UNIX systems."
msgstr ""

#: ../../introduction.rst:163
msgid "Supervisor will *not* run at all under any version of Windows."
msgstr ""

#: ../../introduction.rst:165
msgid ""
"Supervisor is intended to work on Python 3 version 3.4 or later and on "
"Python 2 version 2.7."
msgstr ""

