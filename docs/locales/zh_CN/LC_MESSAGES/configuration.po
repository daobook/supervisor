# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2004-2022, Agendaless Consulting and Contributors
# This file is distributed under the same license as the Supervisor package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2022.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Supervisor 4.3.0.dev0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2022-02-02 04:24+0800\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.9.1\n"

#: ../../configuration.rst:2
msgid "Configuration File"
msgstr ""

#: ../../configuration.rst:4
msgid ""
"The Supervisor configuration file is conventionally named "
":file:`supervisord.conf`.  It is used by both :program:`supervisord` and "
":program:`supervisorctl`.  If either application is started without the "
"``-c`` option (the option which is used to tell the application the "
"configuration filename explicitly), the application will look for a file "
"named :file:`supervisord.conf` within the following locations, in the "
"specified order.  It will use the first file it finds."
msgstr ""

#: ../../configuration.rst:13
msgid ":file:`../etc/supervisord.conf` (Relative to the executable)"
msgstr ""

#: ../../configuration.rst:15
msgid ":file:`../supervisord.conf` (Relative to the executable)"
msgstr ""

#: ../../configuration.rst:17
msgid ":file:`$CWD/supervisord.conf`"
msgstr ""

#: ../../configuration.rst:19
msgid ":file:`$CWD/etc/supervisord.conf`"
msgstr ""

#: ../../configuration.rst:21
msgid ":file:`/etc/supervisord.conf`"
msgstr ""

#: ../../configuration.rst:23
msgid ":file:`/etc/supervisor/supervisord.conf` (since Supervisor 3.3.0)"
msgstr ""

#: ../../configuration.rst:27
msgid ""
"Many versions of Supervisor packaged for Debian and Ubuntu included a "
"patch that added ``/etc/supervisor/supervisord.conf`` to the search "
"paths.  The first PyPI package of Supervisor to include it was Supervisor"
" 3.3.0."
msgstr ""

#: ../../configuration.rst:32
msgid "File Format"
msgstr ""

#: ../../configuration.rst:34
msgid ""
":file:`supervisord.conf` is a Windows-INI-style (Python ConfigParser) "
"file.  It has sections (each denoted by a ``[header]``) and key / value "
"pairs within the sections.  The sections and their allowable values are "
"described below."
msgstr ""

#: ../../configuration.rst:40
msgid "Environment Variables"
msgstr ""

#: ../../configuration.rst:42
#, python-format
msgid ""
"Environment variables that are present in the environment at the time "
"that :program:`supervisord` is started can be used in the configuration "
"file using the Python string expression syntax ``%(ENV_X)s``:"
msgstr ""

#: ../../configuration.rst:51
#, python-format
msgid ""
"In the example above, the expression ``%(ENV_LOGLEVEL)s`` would be "
"expanded to the value of the environment variable ``LOGLEVEL``."
msgstr ""

#: ../../configuration.rst:56
#, python-format
msgid ""
"In Supervisor 3.2 and later, ``%(ENV_X)s`` expressions are supported in "
"all options.  In prior versions, some options support them, but most do "
"not.  See the documentation for each option below."
msgstr ""

#: ../../configuration.rst:62
msgid "``[unix_http_server]`` Section Settings"
msgstr ""

#: ../../configuration.rst:64
msgid ""
"The :file:`supervisord.conf` file contains a section named "
"``[unix_http_server]`` under which configuration parameters for an HTTP "
"server that listens on a UNIX domain socket should be inserted. If the "
"configuration file has no ``[unix_http_server]`` section, a UNIX domain "
"socket HTTP server will not be started.  The allowable configuration "
"values are as follows."
msgstr ""

#: ../../configuration.rst:72
msgid "``[unix_http_server]`` Section Values"
msgstr ""

#: ../../configuration.rst:74
msgid "``file``"
msgstr ""

#: ../../configuration.rst:76
#, python-format
msgid ""
"A path to a UNIX domain socket on which supervisor will listen for HTTP"
"/XML-RPC requests.  :program:`supervisorctl` uses XML-RPC to communicate "
"with :program:`supervisord` over this port.  This option can include the "
"value ``%(here)s``, which expands to the directory in which the "
":program:`supervisord` configuration file was found."
msgstr ""

#: ../../configuration.rst:82
msgid "*Default*:  None."
msgstr ""

#: ../../configuration.rst:84 ../../configuration.rst:104
#: ../../configuration.rst:116 ../../configuration.rst:126
#: ../../configuration.rst:142 ../../configuration.rst:205
#: ../../configuration.rst:221 ../../configuration.rst:260
#: ../../configuration.rst:273 ../../configuration.rst:284
#: ../../configuration.rst:300 ../../configuration.rst:312
#: ../../configuration.rst:322 ../../configuration.rst:333
#: ../../configuration.rst:362 ../../configuration.rst:378
#: ../../configuration.rst:389 ../../configuration.rst:401
#: ../../configuration.rst:413 ../../configuration.rst:431
#: ../../configuration.rst:441 ../../configuration.rst:463
#: ../../configuration.rst:474 ../../configuration.rst:519
#: ../../configuration.rst:532 ../../configuration.rst:547
#: ../../configuration.rst:557 ../../configuration.rst:570
#: ../../configuration.rst:677 ../../configuration.rst:691
#: ../../configuration.rst:702 ../../configuration.rst:716
#: ../../configuration.rst:727 ../../configuration.rst:747
#: ../../configuration.rst:767 ../../configuration.rst:795
#: ../../configuration.rst:809 ../../configuration.rst:826
#: ../../configuration.rst:840 ../../configuration.rst:853
#: ../../configuration.rst:866 ../../configuration.rst:885
#: ../../configuration.rst:904 ../../configuration.rst:935
#: ../../configuration.rst:948 ../../configuration.rst:960
#: ../../configuration.rst:973 ../../configuration.rst:986
#: ../../configuration.rst:996 ../../configuration.rst:1020
#: ../../configuration.rst:1032 ../../configuration.rst:1043
#: ../../configuration.rst:1056 ../../configuration.rst:1069
#: ../../configuration.rst:1079 ../../configuration.rst:1099
#: ../../configuration.rst:1110 ../../configuration.rst:1121
#: ../../configuration.rst:1138 ../../configuration.rst:1284
#: ../../configuration.rst:1378 ../../configuration.rst:1390
#: ../../configuration.rst:1401 ../../configuration.rst:1589
msgid "*Required*:  No."
msgstr ""

#: ../../configuration.rst:86 ../../configuration.rst:106
#: ../../configuration.rst:118 ../../configuration.rst:128
#: ../../configuration.rst:144 ../../configuration.rst:197
#: ../../configuration.rst:207 ../../configuration.rst:223
#: ../../configuration.rst:262 ../../configuration.rst:275
#: ../../configuration.rst:286 ../../configuration.rst:302
#: ../../configuration.rst:314 ../../configuration.rst:324
#: ../../configuration.rst:335 ../../configuration.rst:364
#: ../../configuration.rst:380 ../../configuration.rst:391
#: ../../configuration.rst:403 ../../configuration.rst:415
#: ../../configuration.rst:433 ../../configuration.rst:443
#: ../../configuration.rst:465 ../../configuration.rst:476
#: ../../configuration.rst:521 ../../configuration.rst:534
#: ../../configuration.rst:549 ../../configuration.rst:559
#: ../../configuration.rst:662 ../../configuration.rst:679
#: ../../configuration.rst:693 ../../configuration.rst:704
#: ../../configuration.rst:718 ../../configuration.rst:729
#: ../../configuration.rst:749 ../../configuration.rst:769
#: ../../configuration.rst:797 ../../configuration.rst:811
#: ../../configuration.rst:828 ../../configuration.rst:842
#: ../../configuration.rst:887 ../../configuration.rst:975
#: ../../configuration.rst:1022 ../../configuration.rst:1034
#: ../../configuration.rst:1045 ../../configuration.rst:1058
#: ../../configuration.rst:1101 ../../configuration.rst:1112
#: ../../configuration.rst:1123 ../../configuration.rst:1140
#: ../../configuration.rst:1207 ../../configuration.rst:1275
#: ../../configuration.rst:1286 ../../configuration.rst:1370
#: ../../configuration.rst:1392 ../../configuration.rst:1403
#: ../../configuration.rst:1591
msgid "*Introduced*: 3.0"
msgstr ""

#: ../../configuration.rst:90
msgid ""
"The example configuration output by :program:`echo_supervisord_conf` uses"
" ``/tmp/supervisor.sock`` as the socket file.  That path is an example "
"only and will likely need to be changed to a location more appropriate "
"for your system.  Some systems periodically delete older files in "
"``/tmp``.  If the socket file is deleted, :program:`supervisorctl` will "
"be unable to connect to :program:`supervisord`."
msgstr ""

#: ../../configuration.rst:97
msgid "``chmod``"
msgstr ""

#: ../../configuration.rst:99
msgid ""
"Change the UNIX permission mode bits of the UNIX domain socket to this "
"value at startup."
msgstr ""

#: ../../configuration.rst:102
msgid "*Default*: ``0700``"
msgstr ""

#: ../../configuration.rst:108
msgid "``chown``"
msgstr ""

#: ../../configuration.rst:110
msgid ""
"Change the user and group of the socket file to this value.  May be a "
"UNIX username (e.g. ``chrism``) or a UNIX username and group separated by"
" a colon (e.g. ``chrism:wheel``)."
msgstr ""

#: ../../configuration.rst:114
msgid "*Default*:  Use the username and group of the user who starts supervisord."
msgstr ""

#: ../../configuration.rst:120 ../../configuration.rst:199
#: ../../configuration.rst:523
msgid "``username``"
msgstr ""

#: ../../configuration.rst:122 ../../configuration.rst:201
msgid "The username required for authentication to this HTTP server."
msgstr ""

#: ../../configuration.rst:124 ../../configuration.rst:203
msgid "*Default*:  No username required."
msgstr ""

#: ../../configuration.rst:130 ../../configuration.rst:209
#: ../../configuration.rst:536
msgid "``password``"
msgstr ""

#: ../../configuration.rst:132 ../../configuration.rst:211
msgid ""
"The password required for authentication to this HTTP server.  This can "
"be a cleartext password, or can be specified as a SHA-1 hash if prefixed "
"by the string ``{SHA}``.  For example, "
"``{SHA}82ab876d1387bfafe46cc1c8a2ef074eae50cb1d`` is the SHA-stored "
"version of the password \"thepassword\"."
msgstr ""

#: ../../configuration.rst:138 ../../configuration.rst:217
msgid "Note that hashed password must be in hex format."
msgstr ""

#: ../../configuration.rst:140 ../../configuration.rst:219
msgid "*Default*:  No password required."
msgstr ""

#: ../../configuration.rst:147
msgid "``[unix_http_server]`` Section Example"
msgstr ""

#: ../../configuration.rst:159
msgid "``[inet_http_server]`` Section Settings"
msgstr ""

#: ../../configuration.rst:161
msgid ""
"The :file:`supervisord.conf` file contains a section named "
"``[inet_http_server]`` under which configuration parameters for an HTTP "
"server that listens on a TCP (internet) socket should be inserted.  If "
"the configuration file has no ``[inet_http_server]`` section, an inet "
"HTTP server will not be started.  The allowable configuration values are "
"as follows."
msgstr ""

#: ../../configuration.rst:170
msgid ""
"The inet HTTP server is not enabled by default.  If you choose to enable "
"it, please read the following security warning.  The inet HTTP server is "
"intended for use within a trusted environment only.  It should only be "
"bound to localhost or only accessible from within an isolated, trusted "
"network.  The inet HTTP server does not support any form of encryption.  "
"The inet HTTP server does not use authentication by default (see the "
"``username=`` and ``password=`` options). The inet HTTP server can be "
"controlled remotely from :program:`supervisorctl`. It also serves a web "
"interface that allows subprocesses to be started or stopped, and "
"subprocess logs to be viewed.  **Never expose the inet HTTP server to the"
" public internet.**"
msgstr ""

#: ../../configuration.rst:182
msgid "``[inet_http_server]`` Section Values"
msgstr ""

#: ../../configuration.rst:184
msgid "``port``"
msgstr ""

#: ../../configuration.rst:186
msgid ""
"A TCP host:port value or (e.g. ``127.0.0.1:9001``) on which supervisor "
"will listen for HTTP/XML-RPC requests. :program:`supervisorctl` will use "
"XML-RPC to communicate with :program:`supervisord` over this port.  To "
"listen on all interfaces in the machine, use ``:9001`` or ``*:9001``.  "
"Please read the security warning above."
msgstr ""

#: ../../configuration.rst:193
msgid "*Default*:  No default."
msgstr ""

#: ../../configuration.rst:195 ../../configuration.rst:660
#: ../../configuration.rst:1205 ../../configuration.rst:1273
#: ../../configuration.rst:1368
msgid "*Required*:  Yes."
msgstr ""

#: ../../configuration.rst:226
msgid "``[inet_http_server]`` Section Example"
msgstr ""

#: ../../configuration.rst:236
msgid "``[supervisord]`` Section Settings"
msgstr ""

#: ../../configuration.rst:238
msgid ""
"The :file:`supervisord.conf` file contains a section named "
"``[supervisord]`` in which global settings related to the "
":program:`supervisord` process should be inserted.  These are as follows."
msgstr ""

#: ../../configuration.rst:244
msgid "``[supervisord]`` Section Values"
msgstr ""

#: ../../configuration.rst:246
msgid "``logfile``"
msgstr ""

#: ../../configuration.rst:248
#, python-format
msgid ""
"The path to the activity log of the supervisord process.  This option can"
" include the value ``%(here)s``, which expands to the directory in which "
"the supervisord configuration file was found."
msgstr ""

#: ../../configuration.rst:254
msgid ""
"If ``logfile`` is set to a special file like ``/dev/stdout`` that is not "
"seekable, log rotation must be disabled by setting ``logfile_maxbytes = "
"0``."
msgstr ""

#: ../../configuration.rst:258
msgid "*Default*:  :file:`$CWD/supervisord.log`"
msgstr ""

#: ../../configuration.rst:264
msgid "``logfile_maxbytes``"
msgstr ""

#: ../../configuration.rst:266
msgid ""
"The maximum number of bytes that may be consumed by the activity log file"
" before it is rotated (suffix multipliers like \"KB\", \"MB\", and \"GB\""
" can be used in the value).  Set this value to 0 to indicate an unlimited"
" log size."
msgstr ""

#: ../../configuration.rst:271
msgid "*Default*:  50MB"
msgstr ""

#: ../../configuration.rst:277
msgid "``logfile_backups``"
msgstr ""

#: ../../configuration.rst:279
msgid ""
"The number of backups to keep around resulting from activity log file "
"rotation.  If set to 0, no backups will be kept."
msgstr ""

#: ../../configuration.rst:282
msgid "*Default*:  10"
msgstr ""

#: ../../configuration.rst:288
msgid "``loglevel``"
msgstr ""

#: ../../configuration.rst:290
msgid ""
"The logging level, dictating what is written to the supervisord activity "
"log.  One of ``critical``, ``error``, ``warn``, ``info``, ``debug``, "
"``trace``, or ``blather``.  Note that at log level ``debug``, the "
"supervisord log file will record the stderr/stdout output of its child "
"processes and extended info info about process state changes, which is "
"useful for debugging a process which isn't starting properly.  See also: "
":ref:`activity_log_levels`."
msgstr ""

#: ../../configuration.rst:298
msgid "*Default*:  info"
msgstr ""

#: ../../configuration.rst:304
msgid "``pidfile``"
msgstr ""

#: ../../configuration.rst:306
#, python-format
msgid ""
"The location in which supervisord keeps its pid file.  This option can "
"include the value ``%(here)s``, which expands to the directory in which "
"the supervisord configuration file was found."
msgstr ""

#: ../../configuration.rst:310
msgid "*Default*:  :file:`$CWD/supervisord.pid`"
msgstr ""

#: ../../configuration.rst:316 ../../configuration.rst:1114
msgid "``umask``"
msgstr ""

#: ../../configuration.rst:318
msgid "The :term:`umask` of the supervisord process."
msgstr ""

#: ../../configuration.rst:320
msgid "*Default*:  ``022``"
msgstr ""

#: ../../configuration.rst:326
msgid "``nodaemon``"
msgstr ""

#: ../../configuration.rst:328
msgid "If true, supervisord will start in the foreground instead of daemonizing."
msgstr ""

#: ../../configuration.rst:331 ../../configuration.rst:341
#: ../../configuration.rst:387
msgid "*Default*:  false"
msgstr ""

#: ../../configuration.rst:337
msgid "``silent``"
msgstr ""

#: ../../configuration.rst:339
msgid "If true and not daemonized, logs will not be directed to stdout."
msgstr ""

#: ../../configuration.rst:343
msgid "*Required*: No."
msgstr ""

#: ../../configuration.rst:345
msgid "*Introduced*: 4.2.0"
msgstr ""

#: ../../configuration.rst:347
msgid "``minfds``"
msgstr ""

#: ../../configuration.rst:349
msgid ""
"The minimum number of file descriptors that must be available before "
"supervisord will start successfully.  A call to setrlimit will be made to"
" attempt to raise the soft and hard limits of the supervisord process to "
"satisfy ``minfds``.  The hard limit may only be raised if supervisord is "
"run as root.  supervisord uses file descriptors liberally, and will enter"
" a failure mode when one cannot be obtained from the OS, so it's useful "
"to be able to specify a minimum value to ensure it doesn't run out of "
"them during execution.  These limits will be inherited by the managed "
"subprocesses.  This option is particularly useful on Solaris, which has a"
" low per-process fd limit by default."
msgstr ""

#: ../../configuration.rst:360
msgid "*Default*:  1024"
msgstr ""

#: ../../configuration.rst:366
msgid "``minprocs``"
msgstr ""

#: ../../configuration.rst:368
msgid ""
"The minimum number of process descriptors that must be available before "
"supervisord will start successfully.  A call to setrlimit will be made to"
" attempt to raise the soft and hard limits of the supervisord process to "
"satisfy ``minprocs``.  The hard limit may only be raised if supervisord "
"is run as root.  supervisord will enter a failure mode when the OS runs "
"out of process descriptors, so it's useful to ensure that enough process "
"descriptors are available upon :program:`supervisord` startup."
msgstr ""

#: ../../configuration.rst:376
msgid "*Default*:  200"
msgstr ""

#: ../../configuration.rst:382
msgid "``nocleanup``"
msgstr ""

#: ../../configuration.rst:384
msgid ""
"Prevent supervisord from clearing any existing ``AUTO`` child log files "
"at startup time.  Useful for debugging."
msgstr ""

#: ../../configuration.rst:393
msgid "``childlogdir``"
msgstr ""

#: ../../configuration.rst:395
#, python-format
msgid ""
"The directory used for ``AUTO`` child log files.  This option can include"
" the value ``%(here)s``, which expands to the directory in which the "
":program:`supervisord` configuration file was found."
msgstr ""

#: ../../configuration.rst:399
msgid "*Default*: value of Python's :func:`tempfile.gettempdir`"
msgstr ""

#: ../../configuration.rst:405 ../../configuration.rst:870
msgid "``user``"
msgstr ""

#: ../../configuration.rst:407
msgid ""
"Instruct :program:`supervisord` to switch users to this UNIX user account"
" before doing any meaningful processing.  The user can only be switched "
"if :program:`supervisord` is started as the root user."
msgstr ""

#: ../../configuration.rst:411
msgid "*Default*: do not switch users"
msgstr ""

#: ../../configuration.rst:417
msgid ""
"*Changed*: 3.3.4.  If :program:`supervisord` can't switch to the "
"specified user, it will write an error message to ``stderr`` and then "
"exit immediately.  In earlier versions, it would continue to run but "
"would log a message at the ``critical`` level."
msgstr ""

#: ../../configuration.rst:422 ../../configuration.rst:1103
msgid "``directory``"
msgstr ""

#: ../../configuration.rst:424
#, python-format
msgid ""
"When :program:`supervisord` daemonizes, switch to this directory. This "
"option can include the value ``%(here)s``, which expands to the directory"
" in which the :program:`supervisord` configuration file was found."
msgstr ""

#: ../../configuration.rst:429
msgid "*Default*: do not cd"
msgstr ""

#: ../../configuration.rst:435
msgid "``strip_ansi``"
msgstr ""

#: ../../configuration.rst:437
msgid "Strip all ANSI escape sequences from child log files."
msgstr ""

#: ../../configuration.rst:439 ../../configuration.rst:851
#: ../../configuration.rst:864 ../../configuration.rst:902
#: ../../configuration.rst:1067
msgid "*Default*: false"
msgstr ""

#: ../../configuration.rst:445 ../../configuration.rst:1083
msgid "``environment``"
msgstr ""

#: ../../configuration.rst:447
#, python-format
msgid ""
"A list of key/value pairs in the form ``KEY=\"val\",KEY2=\"val2\"`` that "
"will be placed in the environment of all child processes.  This does not "
"change the environment of :program:`supervisord` itself.  This option can"
" include the value ``%(here)s``, which expands to the directory in which "
"the supervisord configuration file was found. Values containing non-"
"alphanumeric characters should be quoted (e.g. "
"``KEY=\"val:123\",KEY2=\"val,456\"``).  Otherwise, quoting the values is "
"optional but recommended.  To escape percent characters, simply use two. "
"(e.g. ``URI=\"/first%%20name\"``) **Note** that subprocesses will inherit"
" the environment variables of the shell used to start "
":program:`supervisord` except for the ones overridden here and within the"
" program's ``environment`` option.  See :ref:`subprocess_environment`."
msgstr ""

#: ../../configuration.rst:461
msgid "*Default*: no values"
msgstr ""

#: ../../configuration.rst:467
msgid "``identifier``"
msgstr ""

#: ../../configuration.rst:469
msgid ""
"The identifier string for this supervisor process, used by the RPC "
"interface."
msgstr ""

#: ../../configuration.rst:472
msgid "*Default*: supervisor"
msgstr ""

#: ../../configuration.rst:479
msgid "``[supervisord]`` Section Example"
msgstr ""

#: ../../configuration.rst:502
msgid "``[supervisorctl]`` Section Settings"
msgstr ""

#: ../../configuration.rst:504
msgid ""
"The configuration file may contain settings for the "
":program:`supervisorctl` interactive shell program.  These options are "
"listed below."
msgstr ""

#: ../../configuration.rst:509
msgid "``[supervisorctl]`` Section Values"
msgstr ""

#: ../../configuration.rst:511 ../../configuration.rst:1125
msgid "``serverurl``"
msgstr ""

#: ../../configuration.rst:513
msgid ""
"The URL that should be used to access the supervisord server, e.g. "
"``http://localhost:9001``.  For UNIX domain sockets, use "
"``unix:///absolute/path/to/file.sock``."
msgstr ""

#: ../../configuration.rst:517
msgid "*Default*: ``http://localhost:9001``"
msgstr ""

#: ../../configuration.rst:525
msgid ""
"The username to pass to the supervisord server for use in authentication."
"  This should be same as ``username`` from the supervisord server "
"configuration for the port or UNIX domain socket you're attempting to "
"access."
msgstr ""

#: ../../configuration.rst:530
msgid "*Default*: No username"
msgstr ""

#: ../../configuration.rst:538
msgid ""
"The password to pass to the supervisord server for use in authentication."
" This should be the cleartext version of ``password`` from the "
"supervisord server configuration for the port or UNIX domain socket "
"you're attempting to access.  This value cannot be passed as a SHA hash."
"  Unlike other passwords specified in this file, it must be provided in "
"cleartext."
msgstr ""

#: ../../configuration.rst:545
msgid "*Default*: No password"
msgstr ""

#: ../../configuration.rst:551
msgid "``prompt``"
msgstr ""

#: ../../configuration.rst:553
msgid "String used as supervisorctl prompt."
msgstr ""

#: ../../configuration.rst:555
msgid "*Default*: ``supervisor``"
msgstr ""

#: ../../configuration.rst:561
msgid "``history_file``"
msgstr ""

#: ../../configuration.rst:563
msgid ""
"A path to use as the ``readline`` persistent history file.  If you enable"
" this feature by choosing a path, your supervisorctl commands will be "
"kept in the file, and you can use readline (e.g. arrow-up) to invoke "
"commands you performed in your last supervisorctl session."
msgstr ""

#: ../../configuration.rst:568
msgid "*Default*: No file"
msgstr ""

#: ../../configuration.rst:572
msgid "*Introduced*: 3.0a5"
msgstr ""

#: ../../configuration.rst:575
msgid "``[supervisorctl]`` Section Example"
msgstr ""

#: ../../configuration.rst:588
msgid "``[program:x]`` Section Settings"
msgstr ""

#: ../../configuration.rst:590
#, python-format
msgid ""
"The configuration file must contain one or more ``program`` sections in "
"order for supervisord to know which programs it should start and control."
"  The header value is composite value.  It is the word \"program\", "
"followed directly by a colon, then the program name.  A header value of "
"``[program:foo]`` describes a program with the name of \"foo\".  The name"
" is used within client applications that control the processes that are "
"created as a result of this configuration.  It is an error to create a "
"``program`` section that does not have a name. The name must not include "
"a colon character or a bracket character. The value of the name is used "
"as the value for the ``%(program_name)s`` string expression expansion "
"within other values where specified."
msgstr ""

#: ../../configuration.rst:605
msgid ""
"A ``[program:x]`` section actually represents a \"homogeneous process "
"group\" to supervisor (as of 3.0).  The members of the group are defined "
"by the combination of the ``numprocs`` and ``process_name`` parameters in"
" the configuration.  By default, if numprocs and process_name are left "
"unchanged from their defaults, the group represented by ``[program:x]`` "
"will be named ``x`` and will have a single process named ``x`` in it.  "
"This provides a modicum of backwards compatibility with older supervisor "
"releases, which did not treat program sections as homogeneous process "
"group definitions."
msgstr ""

#: ../../configuration.rst:616
#, python-format
msgid ""
"But for instance, if you have a ``[program:foo]`` section with a "
"``numprocs`` of 3 and a ``process_name`` expression of "
"``%(program_name)s_%(process_num)02d``, the \"foo\" group will contain "
"three processes, named ``foo_00``, ``foo_01``, and ``foo_02``.  This "
"makes it possible to start a number of very similar processes using a "
"single ``[program:x]`` section.  All logfile names, all environment "
"strings, and the command of programs can also contain similar Python "
"string expressions, to pass slightly different parameters to each "
"process."
msgstr ""

#: ../../configuration.rst:627
msgid "``[program:x]`` Section Values"
msgstr ""

#: ../../configuration.rst:629
msgid "``command``"
msgstr ""

#: ../../configuration.rst:631
#, python-format
msgid ""
"The command that will be run when this program is started.  The command "
"can be either absolute (e.g. ``/path/to/programname``) or relative (e.g. "
"``programname``).  If it is relative, the supervisord's environment "
"``$PATH`` will be searched for the executable.  Programs can accept "
"arguments, e.g. ``/path/to/program foo bar``.  The command line can use "
"double quotes to group arguments with spaces in them to pass to the "
"program, e.g. ``/path/to/program/name -p \"foo bar\"``.  Note that the "
"value of ``command`` may include Python string expressions, e.g. "
"``/path/to/programname --port=80%(process_num)02d`` might expand to "
"``/path/to/programname --port=8000`` at runtime.  String expressions are "
"evaluated against a dictionary containing the keys ``group_name``, "
"``host_node_name``, ``program_name``, ``process_num``, ``numprocs``, "
"``here`` (the directory of the supervisord config file), and all "
"supervisord's environment variables prefixed with ``ENV_``. Controlled "
"programs should themselves not be daemons, as supervisord assumes it is "
"responsible for daemonizing its subprocesses (see "
":ref:`nondaemonizing_of_subprocesses`)."
msgstr ""

#: ../../configuration.rst:652
msgid ""
"The command will be truncated if it looks like a config file comment, "
"e.g. ``command=bash -c 'foo ; bar'`` will be truncated to ``command=bash "
"-c 'foo``.  Quoting will not prevent this behavior, since the "
"configuration file reader does not parse the command like a shell would."
msgstr ""

#: ../../configuration.rst:658 ../../configuration.rst:1366
msgid "*Default*: No default."
msgstr ""

#: ../../configuration.rst:664
msgid "*Changed*: 4.2.0.  Added support for the ``numprocs`` expansion."
msgstr ""

#: ../../configuration.rst:666
msgid "``process_name``"
msgstr ""

#: ../../configuration.rst:668
msgid ""
"A Python string expression that is used to compose the supervisor process"
" name for this process.  You usually don't need to worry about setting "
"this unless you change ``numprocs``.  The string expression is evaluated "
"against a dictionary that includes ``group_name``, ``host_node_name``, "
"``process_num``, ``program_name``, and ``here`` (the directory of the "
"supervisord config file)."
msgstr ""

#: ../../configuration.rst:675
#, python-format
msgid "*Default*: ``%(program_name)s``"
msgstr ""

#: ../../configuration.rst:681
msgid "``numprocs``"
msgstr ""

#: ../../configuration.rst:683
#, python-format
msgid ""
"Supervisor will start as many instances of this program as named by "
"numprocs.  Note that if numprocs > 1, the ``process_name`` expression "
"must include ``%(process_num)s`` (or any other valid Python string "
"expression that includes ``process_num``) within it."
msgstr ""

#: ../../configuration.rst:689 ../../configuration.rst:745
msgid "*Default*: 1"
msgstr ""

#: ../../configuration.rst:695
msgid "``numprocs_start``"
msgstr ""

#: ../../configuration.rst:697
msgid ""
"An integer offset that is used to compute the number at which "
"``process_num`` starts."
msgstr ""

#: ../../configuration.rst:700 ../../configuration.rst:807
#: ../../configuration.rst:971 ../../configuration.rst:984
#: ../../configuration.rst:1054
msgid "*Default*: 0"
msgstr ""

#: ../../configuration.rst:706 ../../configuration.rst:1277
msgid "``priority``"
msgstr ""

#: ../../configuration.rst:708
msgid ""
"The relative priority of the program in the start and shutdown ordering."
"  Lower priorities indicate programs that start first and shut down last "
"at startup and when aggregate commands are used in various clients (e.g. "
"\"start all\"/\"stop all\").  Higher priorities indicate programs that "
"start last and shut down first."
msgstr ""

#: ../../configuration.rst:714 ../../configuration.rst:1282
msgid "*Default*: 999"
msgstr ""

#: ../../configuration.rst:720
msgid "``autostart``"
msgstr ""

#: ../../configuration.rst:722
msgid ""
"If true, this program will start automatically when supervisord is "
"started."
msgstr ""

#: ../../configuration.rst:725
msgid "*Default*: true"
msgstr ""

#: ../../configuration.rst:731
msgid "``startsecs``"
msgstr ""

#: ../../configuration.rst:733
msgid ""
"The total number of seconds which the program needs to stay running after"
" a startup to consider the start successful (moving the process from the "
"``STARTING`` state to the ``RUNNING`` state).  Set to ``0`` to indicate "
"that the program needn't stay running for any particular amount of time."
msgstr ""

#: ../../configuration.rst:741
msgid ""
"Even if a process exits with an \"expected\" exit code (see "
"``exitcodes``), the start will still be considered a failure if the "
"process exits quicker than ``startsecs``."
msgstr ""

#: ../../configuration.rst:751
msgid "``startretries``"
msgstr ""

#: ../../configuration.rst:753
msgid ""
"The number of serial failure attempts that :program:`supervisord` will "
"allow when attempting to start the program before giving up and putting "
"the process into an ``FATAL`` state."
msgstr ""

#: ../../configuration.rst:759
msgid ""
"After each failed restart, process will be put in ``BACKOFF`` state and "
"each retry attempt will take increasingly more time."
msgstr ""

#: ../../configuration.rst:762
msgid ""
"See :ref:`process_states` for explanation of the ``FATAL`` and "
"``BACKOFF`` states."
msgstr ""

#: ../../configuration.rst:765
msgid "*Default*: 3"
msgstr ""

#: ../../configuration.rst:771
msgid "``autorestart``"
msgstr ""

#: ../../configuration.rst:773
msgid ""
"Specifies if :program:`supervisord` should automatically restart a "
"process if it exits when it is in the ``RUNNING`` state.  May be one of "
"``false``, ``unexpected``, or ``true``.  If ``false``, the process will "
"not be autorestarted.  If ``unexpected``, the process will be restarted "
"when the program exits with an exit code that is not one of the exit "
"codes associated with this process' configuration (see ``exitcodes``).  "
"If ``true``, the process will be unconditionally restarted when it exits,"
" without regard to its exit code."
msgstr ""

#: ../../configuration.rst:784
msgid ""
"``autorestart`` controls whether :program:`supervisord` will autorestart "
"a program if it exits after it has successfully started up (the process "
"is in the ``RUNNING`` state)."
msgstr ""

#: ../../configuration.rst:788
msgid ""
":program:`supervisord` has a different restart mechanism for when the "
"process is starting up (the process is in the ``STARTING`` state). "
"Retries during process startup are controlled by ``startsecs`` and "
"``startretries``."
msgstr ""

#: ../../configuration.rst:793
msgid "*Default*: unexpected"
msgstr ""

#: ../../configuration.rst:799
msgid "``exitcodes``"
msgstr ""

#: ../../configuration.rst:801
msgid ""
"The list of \"expected\" exit codes for this program used with "
"``autorestart``. If the ``autorestart`` parameter is set to "
"``unexpected``, and the process exits in any other way than as a result "
"of a supervisor stop request, :program:`supervisord` will restart the "
"process if it exits with an exit code that is not defined in this list."
msgstr ""

#: ../../configuration.rst:815
msgid ""
"In Supervisor versions prior to 4.0, the default was ``0,2``.  In "
"Supervisor 4.0, the default was changed to ``0``."
msgstr ""

#: ../../configuration.rst:818
msgid "``stopsignal``"
msgstr ""

#: ../../configuration.rst:820
msgid ""
"The signal used to kill the program when a stop is requested.  This can "
"be specified using the signal's name or its number.  It is normally one "
"of: ``TERM``, ``HUP``, ``INT``, ``QUIT``, ``KILL``, ``USR1``, or "
"``USR2``."
msgstr ""

#: ../../configuration.rst:824
msgid "*Default*: TERM"
msgstr ""

#: ../../configuration.rst:830
msgid "``stopwaitsecs``"
msgstr ""

#: ../../configuration.rst:832
msgid ""
"The number of seconds to wait for the OS to return a SIGCHLD to "
":program:`supervisord` after the program has been sent a stopsignal. If "
"this number of seconds elapses before :program:`supervisord` receives a "
"SIGCHLD from the process, :program:`supervisord` will attempt to kill it "
"with a final SIGKILL."
msgstr ""

#: ../../configuration.rst:838 ../../configuration.rst:958
#: ../../configuration.rst:1041
msgid "*Default*: 10"
msgstr ""

#: ../../configuration.rst:844
msgid "``stopasgroup``"
msgstr ""

#: ../../configuration.rst:846
msgid ""
"If true, the flag causes supervisor to send the stop signal to the whole "
"process group and implies ``killasgroup`` is true.  This is useful for "
"programs, such as Flask in debug mode, that do not propagate stop signals"
" to their children, leaving them orphaned."
msgstr ""

#: ../../configuration.rst:855
msgid "*Introduced*: 3.0b1"
msgstr ""

#: ../../configuration.rst:857
msgid "``killasgroup``"
msgstr ""

#: ../../configuration.rst:859
msgid ""
"If true, when resorting to send SIGKILL to the program to terminate it "
"send it to its whole process group instead, taking care of its children "
"as well, useful e.g with Python programs using :mod:`multiprocessing`."
msgstr ""

#: ../../configuration.rst:868
msgid "*Introduced*: 3.0a11"
msgstr ""

#: ../../configuration.rst:872
msgid ""
"Instruct :program:`supervisord` to use this UNIX user account as the "
"account which runs the program.  The user can only be switched if "
":program:`supervisord` is run as the root user.  If "
":program:`supervisord` can't switch to the specified user, the program "
"will not be started."
msgstr ""

#: ../../configuration.rst:879
msgid ""
"The user will be changed using ``setuid`` only.  This does not start a "
"login shell and does not change environment variables like ``USER`` or "
"``HOME``.  See :ref:`subprocess_environment` for details."
msgstr ""

#: ../../configuration.rst:883
msgid "*Default*: Do not switch users"
msgstr ""

#: ../../configuration.rst:889
msgid "``redirect_stderr``"
msgstr ""

#: ../../configuration.rst:891
msgid ""
"If true, cause the process' stderr output to be sent back to "
":program:`supervisord` on its stdout file descriptor (in UNIX shell "
"terms, this is the equivalent of executing ``/the/program 2>&1``)."
msgstr ""

#: ../../configuration.rst:897
msgid ""
"Do not set ``redirect_stderr=true`` in an ``[eventlistener:x]`` section. "
"Eventlisteners use ``stdout`` and ``stdin`` to communicate with "
"``supervisord``.  If ``stderr`` is redirected, output from ``stderr`` "
"will interfere with the eventlistener protocol."
msgstr ""

#: ../../configuration.rst:906
msgid "*Introduced*: 3.0, replaces 2.0's ``log_stdout`` and ``log_stderr``"
msgstr ""

#: ../../configuration.rst:908
msgid "``stdout_logfile``"
msgstr ""

#: ../../configuration.rst:910
msgid ""
"Put process stdout output in this file (and if redirect_stderr is true, "
"also place stderr output in this file).  If ``stdout_logfile`` is unset "
"or set to ``AUTO``, supervisor will automatically choose a file location."
"  If this is set to ``NONE``, supervisord will create no log file.  "
"``AUTO`` log files and their backups will be deleted when "
":program:`supervisord` restarts.  The ``stdout_logfile`` value can "
"contain Python string expressions that will evaluated against a "
"dictionary that contains the keys ``group_name``, ``host_node_name``, "
"``process_num``, ``program_name``, and ``here`` (the directory of the "
"supervisord config file)."
msgstr ""

#: ../../configuration.rst:923
msgid ""
"It is not possible for two processes to share a single log file "
"(``stdout_logfile``) when rotation (``stdout_logfile_maxbytes``) is "
"enabled.  This will result in the file being corrupted."
msgstr ""

#: ../../configuration.rst:929
msgid ""
"If ``stdout_logfile`` is set to a special file like ``/dev/stdout`` that "
"is not seekable, log rotation must be disabled by setting "
"``stdout_logfile_maxbytes = 0``."
msgstr ""

#: ../../configuration.rst:933 ../../configuration.rst:1018
msgid "*Default*: ``AUTO``"
msgstr ""

#: ../../configuration.rst:937
msgid "*Introduced*: 3.0, replaces 2.0's ``logfile``"
msgstr ""

#: ../../configuration.rst:939
msgid "``stdout_logfile_maxbytes``"
msgstr ""

#: ../../configuration.rst:941
msgid ""
"The maximum number of bytes that may be consumed by ``stdout_logfile`` "
"before it is rotated (suffix multipliers like \"KB\", \"MB\", and \"GB\" "
"can be used in the value).  Set this value to 0 to indicate an unlimited "
"log size."
msgstr ""

#: ../../configuration.rst:946 ../../configuration.rst:1030
msgid "*Default*: 50MB"
msgstr ""

#: ../../configuration.rst:950
msgid "*Introduced*: 3.0, replaces 2.0's ``logfile_maxbytes``"
msgstr ""

#: ../../configuration.rst:952
msgid "``stdout_logfile_backups``"
msgstr ""

#: ../../configuration.rst:954
msgid ""
"The number of ``stdout_logfile`` backups to keep around resulting from "
"process stdout log file rotation.  If set to 0, no backups will be kept."
msgstr ""

#: ../../configuration.rst:962
msgid "*Introduced*: 3.0, replaces 2.0's ``logfile_backups``"
msgstr ""

#: ../../configuration.rst:964
msgid "``stdout_capture_maxbytes``"
msgstr ""

#: ../../configuration.rst:966
msgid ""
"Max number of bytes written to capture FIFO when process is in \"stdout "
"capture mode\" (see :ref:`capture_mode`).  Should be an integer (suffix "
"multipliers like \"KB\", \"MB\" and \"GB\" can used in the value).  If "
"this value is 0, process capture mode will be off."
msgstr ""

#: ../../configuration.rst:977
msgid "``stdout_events_enabled``"
msgstr ""

#: ../../configuration.rst:979
msgid ""
"If true, PROCESS_LOG_STDOUT events will be emitted when the process "
"writes to its stdout file descriptor.  The events will only be emitted if"
" the file descriptor is not in capture mode at the time the data is "
"received (see :ref:`capture_mode`)."
msgstr ""

#: ../../configuration.rst:988 ../../configuration.rst:1071
msgid "*Introduced*: 3.0a7"
msgstr ""

#: ../../configuration.rst:990
msgid "``stdout_syslog``"
msgstr ""

#: ../../configuration.rst:992
msgid "If true, stdout will be directed to syslog along with the process name."
msgstr ""

#: ../../configuration.rst:994 ../../configuration.rst:1077
msgid "*Default*: False"
msgstr ""

#: ../../configuration.rst:998 ../../configuration.rst:1081
msgid "*Introduced*: 4.0.0"
msgstr ""

#: ../../configuration.rst:1000
msgid "``stderr_logfile``"
msgstr ""

#: ../../configuration.rst:1002
msgid ""
"Put process stderr output in this file unless ``redirect_stderr`` is "
"true.  Accepts the same value types as ``stdout_logfile`` and may contain"
" the same Python string expressions."
msgstr ""

#: ../../configuration.rst:1008
msgid ""
"It is not possible for two processes to share a single log file "
"(``stderr_logfile``) when rotation (``stderr_logfile_maxbytes``) is "
"enabled.  This will result in the file being corrupted."
msgstr ""

#: ../../configuration.rst:1014
msgid ""
"If ``stderr_logfile`` is set to a special file like ``/dev/stderr`` that "
"is not seekable, log rotation must be disabled by setting "
"``stderr_logfile_maxbytes = 0``."
msgstr ""

#: ../../configuration.rst:1024
msgid "``stderr_logfile_maxbytes``"
msgstr ""

#: ../../configuration.rst:1026
msgid ""
"The maximum number of bytes before logfile rotation for "
"``stderr_logfile``.  Accepts the same value types as "
"``stdout_logfile_maxbytes``."
msgstr ""

#: ../../configuration.rst:1036
msgid "``stderr_logfile_backups``"
msgstr ""

#: ../../configuration.rst:1038
msgid ""
"The number of backups to keep around resulting from process stderr log "
"file rotation.  If set to 0, no backups will be kept."
msgstr ""

#: ../../configuration.rst:1047
msgid "``stderr_capture_maxbytes``"
msgstr ""

#: ../../configuration.rst:1049
msgid ""
"Max number of bytes written to capture FIFO when process is in \"stderr "
"capture mode\" (see :ref:`capture_mode`).  Should be an integer (suffix "
"multipliers like \"KB\", \"MB\" and \"GB\" can used in the value).  If "
"this value is 0, process capture mode will be off."
msgstr ""

#: ../../configuration.rst:1060
msgid "``stderr_events_enabled``"
msgstr ""

#: ../../configuration.rst:1062
msgid ""
"If true, PROCESS_LOG_STDERR events will be emitted when the process "
"writes to its stderr file descriptor.  The events will only be emitted if"
" the file descriptor is not in capture mode at the time the data is "
"received (see :ref:`capture_mode`)."
msgstr ""

#: ../../configuration.rst:1073
msgid "``stderr_syslog``"
msgstr ""

#: ../../configuration.rst:1075
msgid "If true, stderr will be directed to syslog along with the process name."
msgstr ""

#: ../../configuration.rst:1085
msgid ""
"A list of key/value pairs in the form ``KEY=\"val\",KEY2=\"val2\"`` that "
"will be placed in the child process' environment.  The environment string"
" may contain Python string expressions that will be evaluated against a "
"dictionary containing ``group_name``, ``host_node_name``, "
"``process_num``, ``program_name``, and ``here`` (the directory of the "
"supervisord config file).  Values containing non-alphanumeric characters "
"should be quoted (e.g. ``KEY=\"val:123\",KEY2=\"val,456\"``).  Otherwise,"
" quoting the values is optional but recommended.  **Note** that the "
"subprocess will inherit the environment variables of the shell used to "
"start \"supervisord\" except for the ones overridden here.  See "
":ref:`subprocess_environment`."
msgstr ""

#: ../../configuration.rst:1097
msgid "*Default*: No extra environment"
msgstr ""

#: ../../configuration.rst:1105
msgid ""
"A file path representing a directory to which :program:`supervisord` "
"should temporarily chdir before exec'ing the child."
msgstr ""

#: ../../configuration.rst:1108
msgid "*Default*: No chdir (inherit supervisor's)"
msgstr ""

#: ../../configuration.rst:1116
msgid "An octal number (e.g. 002, 022) representing the umask of the process."
msgstr ""

#: ../../configuration.rst:1119
msgid "*Default*: No special umask (inherit supervisor's)"
msgstr ""

#: ../../configuration.rst:1127
msgid ""
"The URL passed in the environment to the subprocess process as "
"``SUPERVISOR_SERVER_URL`` (see :mod:`supervisor.childutils`) to allow the"
" subprocess to easily communicate with the internal HTTP server.  If "
"provided, it should have the same syntax and structure as the "
"``[supervisorctl]`` section option of the same name.  If this is set to "
"AUTO, or is unset, supervisor will automatically construct a server URL, "
"giving preference to a server that listens on UNIX domain sockets over "
"one that listens on an internet socket."
msgstr ""

#: ../../configuration.rst:1136
msgid "*Default*: AUTO"
msgstr ""

#: ../../configuration.rst:1143
msgid "``[program:x]`` Section Example"
msgstr ""

#: ../../configuration.rst:1179
msgid "``[include]`` Section Settings"
msgstr ""

#: ../../configuration.rst:1181
msgid ""
"The :file:`supervisord.conf` file may contain a section named "
"``[include]``.  If the configuration file contains an ``[include]`` "
"section, it must contain a single key named \"files\".  The values in "
"this key specify other configuration files to be included within the "
"configuration."
msgstr ""

#: ../../configuration.rst:1188
msgid "``[include]`` Section Values"
msgstr ""

#: ../../configuration.rst:1190
msgid "``files``"
msgstr ""

#: ../../configuration.rst:1192
msgid ""
"A space-separated sequence of file globs.  Each file glob may be absolute"
" or relative.  If the file glob is relative, it is considered relative to"
" the location of the configuration file which includes it.  A \"glob\" is"
" a file pattern which matches a specified pattern according to the rules "
"used by the Unix shell. No tilde expansion is done, but ``*``, ``?``, and"
" character ranges expressed with ``[]`` will be correctly matched.  The "
"string expression is evaluated against a dictionary that includes "
"``host_node_name`` and ``here`` (the directory of the supervisord config "
"file).  Recursive includes from included files are not supported."
msgstr ""

#: ../../configuration.rst:1203 ../../configuration.rst:1271
msgid "*Default*: No default (required)"
msgstr ""

#: ../../configuration.rst:1209
msgid "*Changed*: 3.3.0.  Added support for the ``host_node_name`` expansion."
msgstr ""

#: ../../configuration.rst:1211
msgid ""
"*Changed*: 4.3.0.  Added support to :program:`supervisorctl` for reading "
"files specified in the ``[include]`` section.  In previous versions, the "
"``[include]`` section was only supported by :program:`supervisord`."
msgstr ""

#: ../../configuration.rst:1216
msgid "``[include]`` Section Example"
msgstr ""

#: ../../configuration.rst:1224
msgid "``[group:x]`` Section Settings"
msgstr ""

#: ../../configuration.rst:1226
msgid ""
"It is often useful to group \"homogeneous\" process groups (aka "
"\"programs\") together into a \"heterogeneous\" process group so they can"
" be controlled as a unit from Supervisor's various controller interfaces."
msgstr ""

#: ../../configuration.rst:1231
msgid ""
"To place programs into a group so you can treat them as a unit, define a "
"``[group:x]`` section in your configuration file.  The group header value"
" is a composite.  It is the word \"group\", followed directly by a colon,"
" then the group name.  A header value of ``[group:foo]`` describes a "
"group with the name of \"foo\".  The name is used within client "
"applications that control the processes that are created as a result of "
"this configuration.  It is an error to create a ``group`` section that "
"does not have a name.  The name must not include a colon character or a "
"bracket character."
msgstr ""

#: ../../configuration.rst:1241
msgid ""
"For a ``[group:x]``, there must be one or more ``[program:x]`` sections "
"elsewhere in your configuration file, and the group must refer to them by"
" name in the ``programs`` value."
msgstr ""

#: ../../configuration.rst:1245
msgid ""
"If \"homogeneous\" process groups (represented by program sections) are "
"placed into a \"heterogeneous\" group via ``[group:x]`` section's "
"``programs`` line, the homogeneous groups that are implied by the program"
" section will not exist at runtime in supervisor.  Instead, all processes"
" belonging to each of the homogeneous groups will be placed into the "
"heterogeneous group.  For example, given the following group "
"configuration:"
msgstr ""

#: ../../configuration.rst:1259
msgid ""
"Given the above, at supervisord startup, the ``bar`` and ``baz`` "
"homogeneous groups will not exist, and the processes that would have been"
" under them will now be moved into the ``foo`` group."
msgstr ""

#: ../../configuration.rst:1264
msgid "``[group:x]`` Section Values"
msgstr ""

#: ../../configuration.rst:1266
msgid "``programs``"
msgstr ""

#: ../../configuration.rst:1268
msgid ""
"A comma-separated list of program names.  The programs which are listed "
"become members of the group."
msgstr ""

#: ../../configuration.rst:1279
msgid ""
"A priority number analogous to a ``[program:x]`` priority value assigned "
"to the group."
msgstr ""

#: ../../configuration.rst:1289
msgid "``[group:x]`` Section Example"
msgstr ""

#: ../../configuration.rst:1299
msgid "``[fcgi-program:x]`` Section Settings"
msgstr ""

#: ../../configuration.rst:1301
msgid ""
"Supervisor can manage groups of `FastCGI <http://www.fastcgi.com>`_ "
"processes that all listen on the same socket.  Until now, deployment "
"flexibility for FastCGI was limited.  To get full process management, you"
" could use mod_fastcgi under Apache but then you were stuck with Apache's"
" inefficient concurrency model of one process or thread per connection.  "
"In addition to requiring more CPU and memory resources, the "
"process/thread per connection model can be quickly saturated by a slow "
"resource, preventing other resources from being served.  In order to take"
" advantage of newer event-driven web servers such as lighttpd or nginx "
"which don't include a built-in process manager, you had to use scripts "
"like cgi-fcgi or spawn-fcgi.  These can be used in conjunction with a "
"process manager such as supervisord or daemontools but require each "
"FastCGI child process to bind to its own socket. The disadvantages of "
"this are: unnecessarily complicated web server configuration, ungraceful "
"restarts, and reduced fault tolerance.  With fewer sockets to configure, "
"web server configurations are much smaller if groups of FastCGI processes"
" can share sockets.  Shared sockets allow for graceful restarts because "
"the socket remains bound by the parent process while any of the child "
"processes are being restarted. Finally, shared sockets are more fault "
"tolerant because if a given process fails, other processes can continue "
"to serve inbound connections."
msgstr ""

#: ../../configuration.rst:1324
msgid ""
"With integrated FastCGI spawning support, Supervisor gives you the best "
"of both worlds.  You get full-featured process management with groups of "
"FastCGI processes sharing sockets without being tied to a particular web "
"server.  It's a clean separation of concerns, allowing the web server and"
" the process manager to each do what they do best."
msgstr ""

#: ../../configuration.rst:1332
msgid ""
"The socket manager in Supervisor was originally developed to support "
"FastCGI processes but it is not limited to FastCGI.  Other protocols may "
"be used as well with no special configuration.  Any program that can "
"access an open socket from a file descriptor (e.g. with `socket.fromfd "
"<http://docs.python.org/library/socket.html#socket.fromfd>`_ in Python) "
"can use the socket manager.  Supervisor will automatically create the "
"socket, bind, and listen before forking the first child in a group.  The "
"socket will be passed to each child on file descriptor number ``0`` "
"(zero).  When the last child in the group exits, Supervisor will close "
"the socket."
msgstr ""

#: ../../configuration.rst:1345
msgid ""
"Prior to Supervisor 3.4.0, FastCGI programs (``[fcgi-program:x]``) could "
"not be referenced in groups (``[group:x]``)."
msgstr ""

#: ../../configuration.rst:1348
msgid ""
"All the options available to ``[program:x]`` sections are also respected "
"by ``fcgi-program`` sections."
msgstr ""

#: ../../configuration.rst:1352
msgid "``[fcgi-program:x]`` Section Values"
msgstr ""

#: ../../configuration.rst:1354
msgid ""
"``[fcgi-program:x]`` sections have a few keys which ``[program:x]`` "
"sections do not have."
msgstr ""

#: ../../configuration.rst:1357
msgid "``socket``"
msgstr ""

#: ../../configuration.rst:1359
msgid ""
"The FastCGI socket for this program, either TCP or UNIX domain socket. "
"For TCP sockets, use this format: ``tcp://localhost:9002``. For UNIX "
"domain sockets, use ``unix:///absolute/path/to/file.sock``. String "
"expressions are evaluated against a dictionary containing the keys "
"\"program_name\" and \"here\" (the directory of the supervisord config "
"file)."
msgstr ""

#: ../../configuration.rst:1372
msgid "``socket_backlog``"
msgstr ""

#: ../../configuration.rst:1374
msgid "Sets socket listen(2) backlog."
msgstr ""

#: ../../configuration.rst:1376
msgid "*Default*: socket.SOMAXCONN"
msgstr ""

#: ../../configuration.rst:1380
msgid "*Introduced*: 3.4.0"
msgstr ""

#: ../../configuration.rst:1382
msgid "``socket_owner``"
msgstr ""

#: ../../configuration.rst:1384
msgid ""
"For UNIX domain sockets, this parameter can be used to specify the user "
"and group for the FastCGI socket. May be a UNIX username (e.g. chrism) or"
" a UNIX username and group separated by a colon (e.g. chrism:wheel)."
msgstr ""

#: ../../configuration.rst:1388
msgid "*Default*: Uses the user and group set for the fcgi-program"
msgstr ""

#: ../../configuration.rst:1394
msgid "``socket_mode``"
msgstr ""

#: ../../configuration.rst:1396
msgid ""
"For UNIX domain sockets, this parameter can be used to specify the "
"permission mode."
msgstr ""

#: ../../configuration.rst:1399
msgid "*Default*: 0700"
msgstr ""

#: ../../configuration.rst:1405 ../../configuration.rst:1488
msgid ""
"Consult :ref:`programx_section` for other allowable keys, delta the above"
" constraints and additions."
msgstr ""

#: ../../configuration.rst:1409
msgid "``[fcgi-program:x]`` Section Example"
msgstr ""

#: ../../configuration.rst:1446
msgid "``[eventlistener:x]`` Section Settings"
msgstr ""

#: ../../configuration.rst:1448
msgid ""
"Supervisor allows specialized homogeneous process groups (\"event "
"listener pools\") to be defined within the configuration file.  These "
"pools contain processes that are meant to receive and respond to event "
"notifications from supervisor's event system.  See :ref:`events` for an "
"explanation of how events work and how to implement programs that can be "
"declared as event listeners."
msgstr ""

#: ../../configuration.rst:1455
msgid ""
"Note that all the options available to ``[program:x]`` sections are "
"respected by eventlistener sections *except* for "
"``stdout_capture_maxbytes``. Eventlisteners cannot emit process "
"communication events on ``stdout``, but can emit on ``stderr`` (see "
":ref:`capture_mode`)."
msgstr ""

#: ../../configuration.rst:1461
msgid "``[eventlistener:x]`` Section Values"
msgstr ""

#: ../../configuration.rst:1463
msgid ""
"``[eventlistener:x]`` sections have a few keys which ``[program:x]`` "
"sections do not have."
msgstr ""

#: ../../configuration.rst:1466
msgid "``buffer_size``"
msgstr ""

#: ../../configuration.rst:1468
msgid ""
"The event listener pool's event queue buffer size.  When a listener "
"pool's event buffer is overflowed (as can happen when an event listener "
"pool cannot keep up with all of the events sent to it), the oldest event "
"in the buffer is discarded."
msgstr ""

#: ../../configuration.rst:1473
msgid "``events``"
msgstr ""

#: ../../configuration.rst:1475
msgid ""
"A comma-separated list of event type names that this listener is "
"\"interested\" in receiving notifications for (see :ref:`event_types` for"
" a list of valid event type names)."
msgstr ""

#: ../../configuration.rst:1479
msgid "``result_handler``"
msgstr ""

#: ../../configuration.rst:1481
msgid ""
"A `pkg_resources entry point string "
"<http://peak.telecommunity.com/DevCenter/PkgResources>`_ that resolves to"
" a Python callable.  The default value is "
"``supervisor.dispatchers:default_handler``.  Specifying an alternate "
"result handler is a very uncommon thing to need to do, and as a result, "
"how to create one is not documented."
msgstr ""

#: ../../configuration.rst:1492
msgid "``[eventlistener:x]`` Section Example"
msgstr ""

#: ../../configuration.rst:1528
msgid "``[rpcinterface:x]`` Section Settings"
msgstr ""

#: ../../configuration.rst:1530
msgid ""
"Adding ``rpcinterface:x`` settings in the configuration file is only "
"useful for people who wish to extend supervisor with additional custom "
"behavior."
msgstr ""

#: ../../configuration.rst:1534
msgid ""
"In the sample config file (see :ref:`create_config`), there is a section "
"which is named ``[rpcinterface:supervisor]``.  By default it looks like "
"the following."
msgstr ""

#: ../../configuration.rst:1543
msgid ""
"The ``[rpcinterface:supervisor]`` section *must* remain in the "
"configuration for the standard setup of supervisor to work properly. If "
"you don't want supervisor to do anything it doesn't already do out of the"
" box, this is all you need to know about this type of section."
msgstr ""

#: ../../configuration.rst:1548
msgid ""
"However, if you wish to add rpc interface namespaces in order to "
"customize supervisor, you may add additional ``[rpcinterface:foo]`` "
"sections, where \"foo\" represents the namespace of the interface (from "
"the web root), and the value named by ``supervisor.rpcinterface_factory``"
" is a factory callable which should have a function signature that "
"accepts a single positional argument ``supervisord`` and as many keyword "
"arguments as required to perform configuration.  Any extra key/value "
"pairs defined within the ``[rpcinterface:x]`` section will be passed as "
"keyword arguments to the factory."
msgstr ""

#: ../../configuration.rst:1559
msgid ""
"Here's an example of a factory function, created in the ``__init__.py`` "
"file of the Python package ``my.package``."
msgstr ""

#: ../../configuration.rst:1571
msgid "And a section in the config file meant to configure it."
msgstr ""

#: ../../configuration.rst:1580
msgid "``[rpcinterface:x]`` Section Values"
msgstr ""

#: ../../configuration.rst:1582
msgid "``supervisor.rpcinterface_factory``"
msgstr ""

#: ../../configuration.rst:1584
msgid ""
"``pkg_resources`` \"entry point\" dotted name to your RPC interface's "
"factory function."
msgstr ""

#: ../../configuration.rst:1587
msgid "*Default*: N/A"
msgstr ""

#: ../../configuration.rst:1594
msgid "``[rpcinterface:x]`` Section Example"
msgstr ""

